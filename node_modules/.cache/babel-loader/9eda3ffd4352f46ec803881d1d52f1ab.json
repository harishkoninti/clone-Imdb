{"ast":null,"code":"var _jsxFileName = \"/home/harish/mn9/repo/test/-MS_Imdb_Monoceros_Tep_Hyderabad_Part-time_2020_2/src/components/FilmCast.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport FilmFullCast from './FilmFullCast';\nexport default function FilmCast(props) {\n  const [filmCast, setFilmCast] = useState([]);\n  const [filmDirector, setFilmDirector] = useState([]);\n  const [filmWriter, setFilmWriter] = useState([]);\n  const [filmStars, setFilmStars] = useState([]);\n  const [getDetails, setGetDetails] = useState(false);\n  const [isButtonClicked, setButtonClicked] = useState(false);\n  useEffect(() => {\n    if (filmCast.length === 0) {\n      getData();\n    } //if movie changed\n\n\n    if (parseInt(filmCast.id) !== parseInt(props.id)) {\n      getData();\n    } //if we got movie data absolutely\n\n\n    if (getDetails) {\n      getCrew();\n      setGetDetails(false);\n    }\n  });\n\n  const getData = async () => {\n    const data = await axios.get(`https://api.themoviedb.org/3/movie/${props.id}/credits?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8`);\n    setFilmCast(data.data);\n    setGetDetails(true);\n  };\n\n  const getCrew = () => {\n    const stars = [];\n    const directors = [];\n    const writers = [];\n    filmCast.crew.map(person => {\n      if (person.job === \"Director\") return directors.push(person.name);\n      if (person.job === \"Screenplay\" || person.job === \"Writer\") return writers.push(person.name);\n      return true;\n    });\n    filmCast.cast.map(person => {\n      return stars.push(person.name);\n    });\n    setFilmDirector(directors);\n    setFilmWriter(writers);\n    setFilmStars(stars.splice(0, 3));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"film-cast-short\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"director\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Director: \"), filmDirector.join(\", \")), React.createElement(\"div\", {\n    className: \"writers\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Writers: \"), filmWriter.join(\", \")), React.createElement(\"div\", {\n    className: \"stars\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Stars: \"), filmStars.join(\", \")), React.createElement(\"span\", {\n    className: \"see-all-cast\",\n    onClick: () => {\n      setButtonClicked(!isButtonClicked);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, isButtonClicked ? `Hide All Cast` : `See All Cast`, \" \", React.createElement(\"i\", {\n    className: \"fas fa-angle-double-right\",\n    style: {\n      color: \"grey\",\n      fontSize: \"10pt\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), isButtonClicked ? React.createElement(FilmFullCast, {\n    cast: filmCast,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }) : \"\");\n}","map":{"version":3,"sources":["/home/harish/mn9/repo/test/-MS_Imdb_Monoceros_Tep_Hyderabad_Part-time_2020_2/src/components/FilmCast.js"],"names":["React","useEffect","useState","axios","FilmFullCast","FilmCast","props","filmCast","setFilmCast","filmDirector","setFilmDirector","filmWriter","setFilmWriter","filmStars","setFilmStars","getDetails","setGetDetails","isButtonClicked","setButtonClicked","length","getData","parseInt","id","getCrew","data","get","stars","directors","writers","crew","map","person","job","push","name","cast","splice","fontWeight","join","color","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport FilmFullCast from './FilmFullCast'\n\nexport default function FilmCast(props) {\n\n    const [filmCast, setFilmCast] = useState([])\n    const [filmDirector, setFilmDirector] = useState([])\n    const [filmWriter, setFilmWriter] = useState([])\n    const [filmStars, setFilmStars] = useState([])\n    const [getDetails, setGetDetails] = useState(false)\n    const [isButtonClicked, setButtonClicked] = useState(false)\n\n    useEffect(() => {\n        if(filmCast.length === 0){\n            getData()\n        }\n        //if movie changed\n        if(parseInt(filmCast.id) !== parseInt(props.id)){\n            getData()\n        }\n        //if we got movie data absolutely\n        if(getDetails){\n            getCrew()\n            setGetDetails(false)\n        }\n    })\n\n    const getData = async () => {\n        const data = await axios.get(`https://api.themoviedb.org/3/movie/${props.id}/credits?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8`)\n        setFilmCast(data.data)\n        setGetDetails(true)\n    }\n\n    const getCrew = () => {\n        const stars = []\n        const directors = []\n        const writers = []\n\n        filmCast.crew.map(person => {\n            if(person.job === \"Director\")\n                return directors.push(person.name)\n            if(person.job === \"Screenplay\" || person.job === \"Writer\")\n                return writers.push(person.name)\n            return true;\n        })\n        filmCast.cast.map(person => {\n            return stars.push(person.name)\n        })\n        setFilmDirector(directors)\n        setFilmWriter(writers)\n        setFilmStars(stars.splice(0,3))\n    }\n\n    return (\n        <div className=\"film-cast-short\">\n            <div className=\"director\">\n                <span style={{fontWeight: \"bold\"}}>Director: </span>\n                {filmDirector.join(\", \")}\n            </div>\n            <div className=\"writers\">\n                <span style={{fontWeight: \"bold\"}}>Writers: </span>\n                {filmWriter.join(\", \")}\n            </div>\n            <div className=\"stars\">\n                <span style={{fontWeight: \"bold\"}}>Stars: </span>\n                {filmStars.join(\", \")}\n            </div>\n            <span className=\"see-all-cast\" onClick={() => {setButtonClicked(!isButtonClicked)}}>\n                    {isButtonClicked ? `Hide All Cast` : `See All Cast`} <i className=\"fas fa-angle-double-right\" style={{color: \"grey\", fontSize:\"10pt\"}}></i>\n            </span>\n            {\n                isButtonClicked ? \n                    <FilmFullCast cast={filmCast}/>\n                    :\n                    \"\"\n            }\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}