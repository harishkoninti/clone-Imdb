{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\haris\\\\Documents\\\\clone-Imdb\\\\src\\\\components\\\\Explore.js\";\nimport React, { useState, useEffect } from 'react';\nimport ExploreCategory from './ExploreCategory';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\n//const filterCounter = 0\n\nconst topMovies2019URL = \"https://api.themoviedb.org/3/discover/movie?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8&language=en-US&sort_by=vote_average.desc&page=1&primary_release_year=2019&vote_count.gte=2000&with_original_language=en\";\nconst trendingsURL = \"https://api.themoviedb.org/3/trending/movie/week?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8\";\nconst topRatedMoviesURL = \"https://api.themoviedb.org/3/discover/movie?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8&language=en-US&sort_by=vote_average.desc&include_adult=false&include_video=false&page=1&vote_count.gte=10000&with_original_language=en\";\nconst topRatedSeriesURL = \"https://api.themoviedb.org/3/discover/tv?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8&language=en-US&sort_by=vote_average.desc&page=1&vote_count.gte=500&include_null_first_air_dates=false\";\nconst topSeries2019URL = \"https://api.themoviedb.org/3/discover/tv?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8&language=en-US&sort_by=vote_average.desc&first_air_date_year=2019&page=1&vote_count.gte=500&include_null_first_air_dates=false\";\nexport default function Explore() {\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [isSearched, setIsSearched] = useState(false);\n  const handleChange = event => {\n    if (event.target.value !== searchText) {\n      setSearchText(event.target.value);\n      setIsSearched(true);\n    }\n  };\n  useEffect(() => {\n    if (isSearched !== false) getData();\n  });\n  const getData = async () => {\n    const films = await axios.get(\"https://api.themoviedb.org/3/search/multi?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8&language=en-US&query=\" + searchText + \"&page=1&include_adult=false\");\n    const tempArray = [];\n    films.data.results.splice(0, 20).map(film => {\n      film.poster_path !== undefined && film.poster_path !== null ? tempArray.push(film) : void 0;\n      return true;\n    });\n    if (tempArray.length !== searchedMovies) {\n      setSearchedMovies(tempArray);\n      setIsSearched(false);\n    }\n  };\n  console.log(searchedMovies);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"explore\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"explore-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Explore\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-filters-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control search-box\",\n    type: \"text\",\n    placeholder: \"Search\",\n    \"aria-label\": \"Search\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"filter-counter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"0\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-weight-bold\",\n    style: {\n      margin: \"auto\",\n      marginLeft: \"10px\",\n      cursor: \"pointer\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"All Filters\")), searchText.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ExploreCategory, {\n    title: \"Trendings\",\n    apiURL: trendingsURL,\n    type: \"movie\",\n    link: \"trendings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(ExploreCategory, {\n    title: \"Top Movies 2019\",\n    apiURL: topMovies2019URL,\n    type: \"movie\",\n    link: \"top-movies-2019\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(ExploreCategory, {\n    title: \"Top Rated Movies\",\n    apiURL: topRatedMoviesURL,\n    type: \"movie\",\n    link: \"top-rated-movies\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(ExploreCategory, {\n    title: \"Top TV Series 2019\",\n    apiURL: topSeries2019URL,\n    type: \"tv\",\n    link: \"top-series-2019\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(ExploreCategory, {\n    title: \"Top Rated TV Series\",\n    apiURL: topRatedSeriesURL,\n    type: \"tv\",\n    link: \"top-rated-series\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row explore-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, searchedMovies.map(film => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: film.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/details/${film.media_type}/${film.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: `https://image.tmdb.org/t/p/w200` + film.poster_path,\n      className: \"explore-image\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 41\n      }\n    })));\n  })));\n}","map":{"version":3,"names":["React","useState","useEffect","ExploreCategory","axios","Link","topMovies2019URL","trendingsURL","topRatedMoviesURL","topRatedSeriesURL","topSeries2019URL","Explore","searchText","setSearchText","searchedMovies","setSearchedMovies","isSearched","setIsSearched","handleChange","event","target","value","getData","films","get","tempArray","data","results","splice","map","film","poster_path","undefined","push","length","console","log","margin","marginLeft","cursor","id","media_type"],"sources":["C:/Users/haris/Documents/clone-Imdb/src/components/Explore.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport ExploreCategory from './ExploreCategory'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\n\r\n//const filterCounter = 0\r\n\r\nconst topMovies2019URL = \"https://api.themoviedb.org/3/discover/movie?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8&language=en-US&sort_by=vote_average.desc&page=1&primary_release_year=2019&vote_count.gte=2000&with_original_language=en\"\r\nconst trendingsURL = \"https://api.themoviedb.org/3/trending/movie/week?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8\"\r\nconst topRatedMoviesURL = \"https://api.themoviedb.org/3/discover/movie?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8&language=en-US&sort_by=vote_average.desc&include_adult=false&include_video=false&page=1&vote_count.gte=10000&with_original_language=en\"\r\nconst topRatedSeriesURL = \"https://api.themoviedb.org/3/discover/tv?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8&language=en-US&sort_by=vote_average.desc&page=1&vote_count.gte=500&include_null_first_air_dates=false\"\r\nconst topSeries2019URL = \"https://api.themoviedb.org/3/discover/tv?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8&language=en-US&sort_by=vote_average.desc&first_air_date_year=2019&page=1&vote_count.gte=500&include_null_first_air_dates=false\"\r\n\r\nexport default function Explore() {\r\n\r\n    const [searchText, setSearchText] = useState(\"\")\r\n    const [searchedMovies, setSearchedMovies] = useState([])\r\n    const [isSearched, setIsSearched] = useState(false)\r\n\r\n    const handleChange = (event) =>{\r\n        if(event.target.value !== searchText){\r\n            setSearchText(event.target.value)\r\n            setIsSearched(true)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(isSearched !== false)\r\n            getData()\r\n    })\r\n\r\n    const getData = async () => {\r\n        const films = await axios.get(\"https://api.themoviedb.org/3/search/multi?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8&language=en-US&query=\"+searchText+\"&page=1&include_adult=false\")\r\n        const tempArray = []\r\n        films.data.results.splice(0,20).map(film => {\r\n            film.poster_path !== undefined && film.poster_path !== null ? tempArray.push(film) : void(0)\r\n            return true;\r\n        })\r\n        if(tempArray.length !== searchedMovies){\r\n            setSearchedMovies(tempArray)\r\n            setIsSearched(false)\r\n        }\r\n    }\r\n    console.log(searchedMovies)\r\n    return (\r\n        <div className=\"explore\">\r\n            <h1 className=\"explore-text\">Explore</h1>\r\n            <div className=\"search-filters-bar\">\r\n                <input className=\"form-control search-box\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" onChange={handleChange}></input>\r\n                <span className=\"filter-counter\">0</span>\r\n                <span className=\"font-weight-bold\" style={{margin:\"auto\",marginLeft:\"10px\",cursor:\"pointer\"}}>All Filters</span>\r\n            </div>\r\n            {\r\n                searchText.length === 0 ? \r\n                (\r\n                <div>\r\n                    <ExploreCategory title=\"Trendings\" apiURL={trendingsURL} type=\"movie\" link=\"trendings\"/>\r\n                    <ExploreCategory title=\"Top Movies 2019\" apiURL={topMovies2019URL} type=\"movie\" link=\"top-movies-2019\"/>\r\n                    <ExploreCategory title=\"Top Rated Movies\" apiURL={topRatedMoviesURL} type=\"movie\" link=\"top-rated-movies\"/>\r\n                    <ExploreCategory title=\"Top TV Series 2019\" apiURL={topSeries2019URL} type=\"tv\" link=\"top-series-2019\"/>\r\n                    <ExploreCategory title=\"Top Rated TV Series\" apiURL={topRatedSeriesURL} type=\"tv\" link=\"top-rated-series\"/>\r\n                </div>\r\n                )\r\n                :\r\n                (\r\n                <div className=\"row explore-row\">\r\n                    {\r\n                        searchedMovies.map(film => {\r\n                            return(\r\n                                <div key={film.id}>\r\n                                    <Link to={`/details/${film.media_type}/${film.id}`}>\r\n                                        <img src={`https://image.tmdb.org/t/p/w200`+film.poster_path} className = \"explore-image\" alt=\"\"/>\r\n                                    </Link>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                )\r\n            }\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}