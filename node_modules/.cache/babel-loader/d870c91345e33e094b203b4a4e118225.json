{"ast":null,"code":"var _jsxFileName = \"/home/harish/mn9/repo/test/-MS_Imdb_Monoceros_Tep_Hyderabad_Part-time_2020_2/src/components/SeriesCast.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport FilmFullCast from './FilmFullCast';\nexport default function SeriesCast(props) {\n  const [seriesCast, setSeriesCast] = useState([]);\n  const [seriesStars, setSeriesStars] = useState([]);\n  const [getSeriesDetails, setGetSeriesDetails] = useState(false);\n  const [isButtonClicked, setButtonClicked] = useState(false);\n  useEffect(() => {\n    if (seriesCast.length === 0) {\n      getData();\n    } //if movie changed\n\n\n    if (parseInt(seriesCast.id) !== parseInt(props.id)) {\n      getData();\n    } //if we got movie data absolutely\n\n\n    if (getSeriesDetails) {\n      getCrew();\n      setGetSeriesDetails(false);\n    }\n  });\n\n  const getData = async () => {\n    const data = await axios.get(`https://api.themoviedb.org/3/tv/${props.id}/credits?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8`);\n    setSeriesCast(data.data);\n    setGetSeriesDetails(true);\n  };\n\n  const getCrew = () => {\n    const stars = [];\n    seriesCast.cast.map(person => {\n      return stars.push(person.name);\n    });\n    setSeriesStars(stars.splice(0, 3));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"stars\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Stars: \"), seriesStars.join(\", \")), React.createElement(\"span\", {\n    className: \"see-all-cast\",\n    onClick: () => {\n      setButtonClicked(!isButtonClicked);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, isButtonClicked ? `Hide All Cast` : `See All Cast`, \" \", React.createElement(\"i\", {\n    className: \"fas fa-angle-double-right\",\n    style: {\n      color: \"grey\",\n      fontSize: \"10pt\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), isButtonClicked ? React.createElement(FilmFullCast, {\n    cast: seriesCast,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }) : \"\");\n}","map":{"version":3,"sources":["/home/harish/mn9/repo/test/-MS_Imdb_Monoceros_Tep_Hyderabad_Part-time_2020_2/src/components/SeriesCast.js"],"names":["React","useEffect","useState","axios","FilmFullCast","SeriesCast","props","seriesCast","setSeriesCast","seriesStars","setSeriesStars","getSeriesDetails","setGetSeriesDetails","isButtonClicked","setButtonClicked","length","getData","parseInt","id","getCrew","data","get","stars","cast","map","person","push","name","splice","fontWeight","join","color","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAEtC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACS,gBAAD,EAAmBC,mBAAnB,IAA0CV,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACW,eAAD,EAAkBC,gBAAlB,IAAsCZ,QAAQ,CAAC,KAAD,CAApD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGM,UAAU,CAACQ,MAAX,KAAsB,CAAzB,EAA2B;AACvBC,MAAAA,OAAO;AACV,KAHW,CAIZ;;;AACA,QAAGC,QAAQ,CAACV,UAAU,CAACW,EAAZ,CAAR,KAA4BD,QAAQ,CAACX,KAAK,CAACY,EAAP,CAAvC,EAAkD;AAC9CF,MAAAA,OAAO;AACV,KAPW,CAQZ;;;AACA,QAAGL,gBAAH,EAAoB;AAChBQ,MAAAA,OAAO;AACPP,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACH;AACJ,GAbQ,CAAT;;AAeA,QAAMI,OAAO,GAAG,YAAY;AACxB,UAAMI,IAAI,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAW,mCAAkCf,KAAK,CAACY,EAAG,mDAAtD,CAAnB;AACAV,IAAAA,aAAa,CAACY,IAAI,CAACA,IAAN,CAAb;AACAR,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACH,GAJD;;AAMA,QAAMO,OAAO,GAAG,MAAM;AAClB,UAAMG,KAAK,GAAG,EAAd;AAEAf,IAAAA,UAAU,CAACgB,IAAX,CAAgBC,GAAhB,CAAoBC,MAAM,IAAI;AAC1B,aAAOH,KAAK,CAACI,IAAN,CAAWD,MAAM,CAACE,IAAlB,CAAP;AACH,KAFD;AAIAjB,IAAAA,cAAc,CAACY,KAAK,CAACM,MAAN,CAAa,CAAb,EAAe,CAAf,CAAD,CAAd;AACH,GARD;;AAUA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEKpB,WAAW,CAACqB,IAAZ,CAAiB,IAAjB,CAFL,CADJ,EAKI;AAAM,IAAA,SAAS,EAAC,cAAhB;AAA+B,IAAA,OAAO,EAAE,MAAM;AAAChB,MAAAA,gBAAgB,CAAC,CAACD,eAAF,CAAhB;AAAmC,KAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACSA,eAAe,GAAI,eAAJ,GAAsB,cAD9C,OAC6D;AAAG,IAAA,SAAS,EAAC,2BAAb;AAAyC,IAAA,KAAK,EAAE;AAACkB,MAAAA,KAAK,EAAE,MAAR;AAAgBC,MAAAA,QAAQ,EAAC;AAAzB,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD7D,CALJ,EASQnB,eAAe,GACX,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAEN,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADW,GAGX,EAZZ,CADJ;AAiBH","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport FilmFullCast from './FilmFullCast'\n\nexport default function SeriesCast(props) {\n\n    const [seriesCast, setSeriesCast] = useState([])\n    const [seriesStars, setSeriesStars] = useState([])\n    const [getSeriesDetails, setGetSeriesDetails] = useState(false)\n    const [isButtonClicked, setButtonClicked] = useState(false)\n\n    useEffect(() => {\n        if(seriesCast.length === 0){\n            getData()\n        }\n        //if movie changed\n        if(parseInt(seriesCast.id) !== parseInt(props.id)){\n            getData()\n        }\n        //if we got movie data absolutely\n        if(getSeriesDetails){\n            getCrew()\n            setGetSeriesDetails(false)\n        }\n    })\n\n    const getData = async () => {\n        const data = await axios.get(`https://api.themoviedb.org/3/tv/${props.id}/credits?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8`)\n        setSeriesCast(data.data)\n        setGetSeriesDetails(true)\n    }\n\n    const getCrew = () => {\n        const stars = []\n\n        seriesCast.cast.map(person => {\n            return stars.push(person.name)\n        })\n\n        setSeriesStars(stars.splice(0,3))\n    }\n\n    return (\n        <div>\n            <div className=\"stars\">\n                <span style={{fontWeight: \"bold\"}}>Stars: </span>\n                {seriesStars.join(\", \")}\n            </div>\n            <span className=\"see-all-cast\" onClick={() => {setButtonClicked(!isButtonClicked)}}>\n                    {isButtonClicked ? `Hide All Cast` : `See All Cast`} <i className=\"fas fa-angle-double-right\" style={{color: \"grey\", fontSize:\"10pt\"}}></i>\n            </span>\n            {\n                isButtonClicked ? \n                    <FilmFullCast cast={seriesCast}/>\n                    :\n                    \"\"\n            }\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}