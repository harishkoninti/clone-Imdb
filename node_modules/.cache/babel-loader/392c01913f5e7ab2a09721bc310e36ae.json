{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\haris\\\\Documents\\\\clone-Imdb\\\\src\\\\components\\\\SeriesCast.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport FilmFullCast from './FilmFullCast';\nexport default function SeriesCast(props) {\n  const [seriesCast, setSeriesCast] = useState([]);\n  const [seriesStars, setSeriesStars] = useState([]);\n  const [getSeriesDetails, setGetSeriesDetails] = useState(false);\n  const [isButtonClicked, setButtonClicked] = useState(false);\n  useEffect(() => {\n    if (seriesCast.length === 0) {\n      getData();\n    }\n    //if movie changed\n    if (parseInt(seriesCast.id) !== parseInt(props.id)) {\n      getData();\n    }\n    //if we got movie data absolutely\n    if (getSeriesDetails) {\n      getCrew();\n      setGetSeriesDetails(false);\n    }\n  });\n  const getData = async () => {\n    const data = await axios.get(`https://api.themoviedb.org/3/tv/${props.id}/credits?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8`);\n    setSeriesCast(data.data);\n    setGetSeriesDetails(true);\n  };\n  const getCrew = () => {\n    const stars = [];\n    seriesCast.cast.map(person => {\n      return stars.push(person.name);\n    });\n    setSeriesStars(stars.splice(0, 3));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stars\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"Stars: \"), seriesStars.join(\", \")), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"see-all-cast\",\n    onClick: () => {\n      setButtonClicked(!isButtonClicked);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, isButtonClicked ? `Hide All Cast` : `See All Cast`, \" \", /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-angle-double-right\",\n    style: {\n      color: \"grey\",\n      fontSize: \"10pt\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 74\n    }\n  })), isButtonClicked ? /*#__PURE__*/React.createElement(FilmFullCast, {\n    cast: seriesCast,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }) : \"\");\n}","map":{"version":3,"names":["React","useEffect","useState","axios","FilmFullCast","SeriesCast","props","seriesCast","setSeriesCast","seriesStars","setSeriesStars","getSeriesDetails","setGetSeriesDetails","isButtonClicked","setButtonClicked","length","getData","parseInt","id","getCrew","data","get","stars","cast","map","person","push","name","splice","fontWeight","join","color","fontSize"],"sources":["C:/Users/haris/Documents/clone-Imdb/src/components/SeriesCast.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport FilmFullCast from './FilmFullCast'\r\n\r\nexport default function SeriesCast(props) {\r\n\r\n    const [seriesCast, setSeriesCast] = useState([])\r\n    const [seriesStars, setSeriesStars] = useState([])\r\n    const [getSeriesDetails, setGetSeriesDetails] = useState(false)\r\n    const [isButtonClicked, setButtonClicked] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if(seriesCast.length === 0){\r\n            getData()\r\n        }\r\n        //if movie changed\r\n        if(parseInt(seriesCast.id) !== parseInt(props.id)){\r\n            getData()\r\n        }\r\n        //if we got movie data absolutely\r\n        if(getSeriesDetails){\r\n            getCrew()\r\n            setGetSeriesDetails(false)\r\n        }\r\n    })\r\n\r\n    const getData = async () => {\r\n        const data = await axios.get(`https://api.themoviedb.org/3/tv/${props.id}/credits?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8`)\r\n        setSeriesCast(data.data)\r\n        setGetSeriesDetails(true)\r\n    }\r\n\r\n    const getCrew = () => {\r\n        const stars = []\r\n\r\n        seriesCast.cast.map(person => {\r\n            return stars.push(person.name)\r\n        })\r\n\r\n        setSeriesStars(stars.splice(0,3))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"stars\">\r\n                <span style={{fontWeight: \"bold\"}}>Stars: </span>\r\n                {seriesStars.join(\", \")}\r\n            </div>\r\n            <span className=\"see-all-cast\" onClick={() => {setButtonClicked(!isButtonClicked)}}>\r\n                    {isButtonClicked ? `Hide All Cast` : `See All Cast`} <i className=\"fas fa-angle-double-right\" style={{color: \"grey\", fontSize:\"10pt\"}}></i>\r\n            </span>\r\n            {\r\n                isButtonClicked ? \r\n                    <FilmFullCast cast={seriesCast}/>\r\n                    :\r\n                    \"\"\r\n            }\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,gBAAgB;AAEzC,eAAe,SAASC,UAAU,CAACC,KAAK,EAAE;EAEtC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACW,eAAe,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE3DD,SAAS,CAAC,MAAM;IACZ,IAAGM,UAAU,CAACQ,MAAM,KAAK,CAAC,EAAC;MACvBC,OAAO,EAAE;IACb;IACA;IACA,IAAGC,QAAQ,CAACV,UAAU,CAACW,EAAE,CAAC,KAAKD,QAAQ,CAACX,KAAK,CAACY,EAAE,CAAC,EAAC;MAC9CF,OAAO,EAAE;IACb;IACA;IACA,IAAGL,gBAAgB,EAAC;MAChBQ,OAAO,EAAE;MACTP,mBAAmB,CAAC,KAAK,CAAC;IAC9B;EACJ,CAAC,CAAC;EAEF,MAAMI,OAAO,GAAG,YAAY;IACxB,MAAMI,IAAI,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAE,mCAAkCf,KAAK,CAACY,EAAG,mDAAkD,CAAC;IAC5HV,aAAa,CAACY,IAAI,CAACA,IAAI,CAAC;IACxBR,mBAAmB,CAAC,IAAI,CAAC;EAC7B,CAAC;EAED,MAAMO,OAAO,GAAG,MAAM;IAClB,MAAMG,KAAK,GAAG,EAAE;IAEhBf,UAAU,CAACgB,IAAI,CAACC,GAAG,CAACC,MAAM,IAAI;MAC1B,OAAOH,KAAK,CAACI,IAAI,CAACD,MAAM,CAACE,IAAI,CAAC;IAClC,CAAC,CAAC;IAEFjB,cAAc,CAACY,KAAK,CAACM,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;EACrC,CAAC;EAED,oBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAClB;IAAM,KAAK,EAAE;MAACC,UAAU,EAAE;IAAM,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,aAAe,EAChDpB,WAAW,CAACqB,IAAI,CAAC,IAAI,CAAC,CACrB,eACN;IAAM,SAAS,EAAC,cAAc;IAAC,OAAO,EAAE,MAAM;MAAChB,gBAAgB,CAAC,CAACD,eAAe,CAAC;IAAA,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC1EA,eAAe,GAAI,eAAc,GAAI,cAAa,oBAAE;IAAG,SAAS,EAAC,2BAA2B;IAAC,KAAK,EAAE;MAACkB,KAAK,EAAE,MAAM;MAAEC,QAAQ,EAAC;IAAM,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAK,CAC5I,EAEHnB,eAAe,gBACX,oBAAC,YAAY;IAAC,IAAI,EAAEN,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,GAEjC,EAAE,CAER;AAEd"},"metadata":{},"sourceType":"module"}