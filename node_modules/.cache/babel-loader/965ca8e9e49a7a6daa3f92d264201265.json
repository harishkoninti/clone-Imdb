{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\haris\\\\Documents\\\\clone-Imdb\\\\src\\\\components\\\\LeftBarItem.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nexport default function LeftBarItem(props) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [films, setFilms] = useState([]);\n  useEffect(() => {\n    if (films.length === 0) getData();\n  });\n  const getData = async () => {\n    const films = await axios.get(props.films);\n    setFilms(films.data.results.splice(0, 5));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `left-bar-item ${isOpen ? \"left-bar-item-open\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      cursor: \"pointer\"\n    },\n    onClick: () => setIsOpen(!isOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"left-bar-item-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, props.text), /*#__PURE__*/React.createElement(\"span\", {\n    className: `plus float-right ${isOpen ? \"text-white\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, isOpen ? \"–\" : \"+\")), isOpen ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, films.map(film => {\n    return /*#__PURE__*/React.createElement(Link, {\n      key: film.original_title,\n      to: `/details/movie/${film.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"left-bar-film\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: `https://image.tmdb.org/t/p/w200` + film.poster_path,\n      className: \"left-bar-film-image\",\n      alt: film.original_title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"left-bar-film-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"left-bar-film-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 49\n      }\n    }, film.original_title), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"grey\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 49\n      }\n    }, `${film.release_date}`)), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"imdb-rating\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 45\n      }\n    }, film.vote_average)));\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: `/lists/${props.link}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"more-result-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, \"MORE RESULT\"))) : null));\n}","map":{"version":3,"names":["React","useEffect","useState","axios","Link","LeftBarItem","props","isOpen","setIsOpen","films","setFilms","length","getData","get","data","results","splice","cursor","text","map","film","original_title","id","margin","poster_path","color","release_date","vote_average","link"],"sources":["C:/Users/haris/Documents/clone-Imdb/src/components/LeftBarItem.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function LeftBarItem(props) {\r\n\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [films, setFilms] = useState([])\r\n\r\n    useEffect(() => {\r\n        if(films.length === 0)\r\n            getData()\r\n    })\r\n\r\n    const getData = async () => {\r\n        const films = await axios.get(props.films)\r\n        setFilms(films.data.results.splice(0,5))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={`left-bar-item ${isOpen ? \"left-bar-item-open\" : \"\"}`}>\r\n                <div style={{cursor:\"pointer\"}} onClick={() => setIsOpen(!isOpen)}>\r\n                    <span className=\"left-bar-item-text\">{props.text}</span>\r\n                    <span className={`plus float-right ${isOpen ? \"text-white\" : \"\"}`}>{isOpen ? \"–\" : \"+\"}</span>\r\n                </div>\r\n                {isOpen ? \r\n                <div>\r\n                    {\r\n                        films.map(film => {\r\n                            return (\r\n                                    <Link key={film.original_title} to={`/details/movie/${film.id}`}>\r\n                                        <div className=\"left-bar-film\">\r\n                                        \r\n                                            <div style={{margin:\"auto\"}}>\r\n                                                <img src={`https://image.tmdb.org/t/p/w200`+film.poster_path} className=\"left-bar-film-image\" alt={film.original_title}/>\r\n                                            </div>\r\n                                            <div className=\"left-bar-film-info\">\r\n                                                <span className=\"left-bar-film-title\">{film.original_title}</span>\r\n                                                <span style={{color:\"grey\"}}>{`${film.release_date}`}</span>\r\n                                            </div>\r\n                                            <span className=\"imdb-rating\">{film.vote_average}</span>\r\n                                        \r\n                                        </div>\r\n                                    </Link>\r\n                            )\r\n                        })\r\n                    }\r\n                    <Link to={`/lists/${props.link}`}>\r\n                        <span className=\"more-result-text\">MORE RESULT</span>\r\n                    </Link>\r\n                </div> : null}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}