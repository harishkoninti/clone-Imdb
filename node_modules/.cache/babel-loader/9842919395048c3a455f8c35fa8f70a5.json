{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\haris\\\\Documents\\\\clone-Imdb\\\\src\\\\components\\\\FilmDetails.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport YouTube from '@u-wave/react-youtube';\nimport FilmCast from './FilmCast';\nexport default function FilmDetails(props) {\n  const [filmData, setFilmData] = useState([]);\n  const [filmVideo, setFilmVideo] = useState(\"\");\n  const [filmGenres, setFilmGenres] = useState(\"\");\n  const [filmTime, setFilmTime] = useState(\"\");\n  const [filmDate, setFilmDate] = useState(\"\");\n  useEffect(() => {\n    if (filmData.length === 0) {\n      getData();\n      getFilmVideo();\n    }\n    //if movie changed\n    if (parseInt(filmData.id) !== parseInt(props.id)) getData();\n    getFilmVideo();\n  });\n  const getData = async () => {\n    const data = await axios.get(`https://api.themoviedb.org/3/movie/${props.id}?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8&language=en-US`);\n    setFilmData(data.data);\n    const genres = [];\n    data.data.genres.splice(0, 2).map(genre => {\n      return genres.push(genre.name);\n    });\n    setFilmGenres(genres);\n    setFilmTime(convertTime(data.data.runtime));\n    setFilmDate(convertDate(data.data.release_date));\n  };\n  const getFilmVideo = async () => {\n    const data = await axios.get(`https://api.themoviedb.org/3/movie/${props.id}/videos?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8&language=en-US`);\n    if (data.data.results[0].site === \"YouTube\") setFilmVideo(data.data.results[0].key);\n  };\n  const convertTime = minute => {\n    let hours = parseInt(minute / 60);\n    let minutes = minute % 60;\n    return hours + \"h \" + minutes + \"min\";\n  };\n  const convertDate = releaseDate => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let date = releaseDate.split(\"-\");\n    return date[2] + \" \" + months[date[1] - 1] + \" \" + date[0];\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"film-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"explore-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, filmData.title, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"film-details-year\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, `(${filmData.release_date ? filmData.release_date.substring(0, 4) : \"\"})`)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"film-details-subtext\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"#ffd701\",\n      fontSize: \"25px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-star\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 68\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"film-details-subtext-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, filmData.vote_average, \"/10\"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      margin: \"0px 10px\",\n      fontSize: \"14pt\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"|\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, filmTime), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      margin: \"0px 10px\",\n      fontSize: \"14pt\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"|\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, filmGenres[0] + \", \" + filmGenres[1]), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      margin: \"0px 10px\",\n      fontSize: \"14pt\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"|\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, filmDate)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"film-details-media\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `https://image.tmdb.org/t/p/w200` + filmData.poster_path,\n    className: \"explore-image m-0\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(YouTube, {\n    className: \"film-details-video\",\n    video: filmVideo,\n    width: \"477px\",\n    height: \"268px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"film-details-overview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, filmData.overview), /*#__PURE__*/React.createElement(FilmCast, {\n    id: filmData.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"names":["React","useState","useEffect","axios","YouTube","FilmCast","FilmDetails","props","filmData","setFilmData","filmVideo","setFilmVideo","filmGenres","setFilmGenres","filmTime","setFilmTime","filmDate","setFilmDate","length","getData","getFilmVideo","parseInt","id","data","get","genres","splice","map","genre","push","name","convertTime","runtime","convertDate","release_date","results","site","key","minute","hours","minutes","releaseDate","months","date","split","title","substring","color","fontSize","vote_average","margin","poster_path","overview"],"sources":["C:/Users/haris/Documents/clone-Imdb/src/components/FilmDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport YouTube from '@u-wave/react-youtube'\r\nimport FilmCast from './FilmCast'\r\n\r\nexport default function FilmDetails(props) {\r\n\r\n    const [filmData, setFilmData] = useState([])\r\n    const [filmVideo, setFilmVideo] = useState(\"\")\r\n    const [filmGenres, setFilmGenres] = useState(\"\")\r\n    const [filmTime, setFilmTime] = useState(\"\")\r\n    const [filmDate, setFilmDate] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        if(filmData.length === 0){\r\n            getData()\r\n            getFilmVideo()\r\n        }\r\n        //if movie changed\r\n        if(parseInt(filmData.id) !== parseInt(props.id))\r\n            getData()\r\n            getFilmVideo()\r\n    })\r\n\r\n    const getData = async () => {\r\n        const data = await axios.get(`https://api.themoviedb.org/3/movie/${props.id}?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8&language=en-US`)\r\n        setFilmData(data.data)\r\n        const genres = []\r\n        data.data.genres.splice(0,2).map(genre => {\r\n            return genres.push(genre.name)\r\n        })\r\n        setFilmGenres(genres)\r\n        setFilmTime(convertTime(data.data.runtime))\r\n        setFilmDate(convertDate(data.data.release_date))\r\n    }\r\n\r\n    const getFilmVideo = async () => {\r\n        const data = await axios.get(`https://api.themoviedb.org/3/movie/${props.id}/videos?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8&language=en-US`)\r\n        if(data.data.results[0].site === \"YouTube\")\r\n            setFilmVideo(data.data.results[0].key)\r\n    }\r\n\r\n    const convertTime = (minute) => {\r\n        let hours = parseInt(minute / 60)\r\n        let minutes = minute % 60\r\n        return hours + \"h \" + minutes + \"min\"\r\n    }\r\n\r\n    const convertDate = (releaseDate) => {\r\n        let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n        let date = releaseDate.split(\"-\")\r\n        return date[2] + \" \" + months[date[1] - 1] + \" \" + date[0]\r\n    }\r\n\r\n    return (\r\n        <div className=\"film-details\">\r\n            <h1 className=\"explore-text\">{filmData.title} \r\n                <span className=\"film-details-year\">{`(${filmData.release_date ? filmData.release_date.substring(0,4) : \"\"})`}</span>\r\n            </h1>\r\n            <div className=\"film-details-subtext\">\r\n                <span style={{color: \"#ffd701\", fontSize: \"25px\"}}><i className=\"fas fa-star\"></i></span>\r\n                <span className=\"film-details-subtext-text\">{filmData.vote_average}/10</span>\r\n                <span style={{margin: \"0px 10px\", fontSize: \"14pt\"}}>|</span>\r\n                <span>{filmTime}</span>\r\n                <span style={{margin: \"0px 10px\", fontSize: \"14pt\"}}>|</span>\r\n                <span>{ filmGenres[0] + \", \" + filmGenres[1] }</span>\r\n                <span style={{margin: \"0px 10px\", fontSize: \"14pt\"}}>|</span>\r\n                <span>{filmDate}</span>\r\n            </div>\r\n            <div className=\"film-details-media\">            \r\n                <img src={`https://image.tmdb.org/t/p/w200`+filmData.poster_path} className = \"explore-image m-0\" alt=\"\"/>\r\n                <YouTube className=\"film-details-video\"\r\n                    video={filmVideo}\r\n                    width=\"477px\"\r\n                    height=\"268px\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"film-details-overview\">{filmData.overview}</div>\r\n            <FilmCast id={filmData.id}/>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}